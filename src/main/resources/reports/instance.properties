#facet.field=created_by,autore

pageSize=10

#orderBy=taskId asc

ftl=instance

title=

#output.columns=name,sid,type,VIRTUAL_PATH,created_on,created_by,modified_on,modified_by,TYPE_ID,NUM_PG,DATA_PG,TIPO_PROTOCOLLAZIONE,MAIL_SUBJECT,MAIL_TO,MAIL_FROM,MAIL_BOX,OGGETTO_PG,OPERATORE_DI_PROTOCOLLO
#sortable.columns=name,sid,type

output.type=map

#query=q={!cloudjoin from=related to=id}related:*1018371*&

#nocount=true

#query=select 1

buffer.tasks=\
    
    select distinct

    pd2.processInstanceId as instanceId,
    pd2.processId as processId,
    pd2.processName as processName,
    pd2.processVersion as processVersion,
    pd2.desProcessInstance as desInstance,

    pd.processInstanceId as primaryInstanceId,
    pd.processId as primaryProcessId,
    pd.processName as primaryProcessName,
    pd.processVersion as primaryProcessVersion,
    pd.desProcessInstance as primaryDesInstance,

    t.id,
    t.name,
    t.description,
    t.status,
    t.priority,
    t.actualOwner_id as actualOwner,
    t.createdBy_id as createdBy,
    t.createdOn as createdOn,
    t.activationTime as activationTime,
    t.expirationTime as expirationTime,
    t.deploymentId,
    summary.endDate as completedOn,
    t.subject as subject,
    summary.startDate as startDate,
    summary.potOwners as potOwners

    from
    Task t
    inner join ProcessDetails pd2 on (pd2.processInstanceId = t.processInstanceId)
    inner join ProcessDetails pd on (pd.processInstanceId = pd2.primaryProcessInstanceId)
    left join TaskDetails summary on (t.workItemId = summary.workItemId)

    where
    pd.processInstanceId in

    (
    select pd1.processInstanceId 
    from ProcessDetails pd0 
    join ProcessDetails pd1 on pd1.processInstanceId = pd0.primaryProcessInstanceId
    where pd0.processInstanceId = :id
    )

buffer.$object=\
    
    select

    pd.processInstanceId instanceId,
    pd.processId,
    pd.processVersion,
    pd.processName,
    pd.desProcessInstance desInstance,

    pdp.processInstanceId as primaryInstanceId,
    pdp.processId primaryProcessId,
    pdp.processVersion primaryProcessVersion,
    pdp.processName primaryProcessName,
    pdp.desProcessInstance primaryDesInstance,

    pdpar.processInstanceId as parentInstanceId,
    pdpar.processId parentProcessId,
    pdpar.processVersion parentProcessVersion,
    pdpar.processName parentProcessName,
    pdpar.desProcessInstance parentDesInstance,

    pd.businessState,
    pd.businessKey,
    pis2.actorId createdBy,
    p.start_date,
    p.end_date,
    p.status,
    p.outcome,
    if(pref.processInstanceId is null,false,true) preferred,

    cast( IF( length(pconf.statusFtl) > 0, pconf.statusFtl,dp.resourceValue) as char) as ftl

    from
    ProcessInstanceLog p
    left join PreferredInstance pref on pref.processInstanceId = p.processInstanceId and pref.userId = :actorId
    left join ProcessInstanceSecurity pis2 on pis2.instanceId = p.processInstanceId and pis2.taskId=0
    left join ProcessDetails pd on pd.processInstanceId = p.processInstanceId
    left join ProcessDetails pdp on pdp.processInstanceId = pd.primaryProcessInstanceId
    left join ProcessDetails pdpar on pdpar.processInstanceId = p.parentProcessInstanceId
    left join DeployedProcess dp on dp.processId=p.processId and resourceName = 'startup.ftl'
    join ProcessConfiguration pconf on pconf.aoo = pd.instanceAoo and pconf.processId = pd.processId

    where
    p.processInstanceId = :id

buffer.errors=\
    
    select ri.*,nil.nodeName,pd.desProcessInstance desInstance

    from (

    select max(timestamp) timestamp, SUBSTRING_INDEX(ri.businessKey,':',1) instanceId,SUBSTRING_INDEX(ri.businessKey,':',-1) workItemId
    from RequestInfo ri 
    where status = 'ERROR' and not exists (

    select 1 from RequestInfo ri2
    where ri2.businessKey = ri.businessKey and ri2.status = 'DONE'

    )

    group by businessKey) ri 
    join NodeInstanceLog nil on nil.processInstanceId = ri.instanceId and nil.type=0 and nil.workItemId = ri.workItemId
    and ri.instanceId in (

    select pd1.ProcessInstanceId
    from ProcessDetails pd1 
    where primaryProcessInstanceId = (select primaryProcessInstanceId from ProcessDetails pd0 where pd0.ProcessInstanceId = :id )

    )
    join ProcessDetails pd on pd.processInstanceId = ri.instanceId


buffer.processes=\
    
    select

    pd.processInstanceId instanceId,
    pd.processId,
    pd.processVersion,
    pd.processName,
    pd.desProcessInstance desInstance,

    pdp.processInstanceId as primaryInstanceId,
    pdp.processId primaryProcessId,
    pdp.processVersion primaryProcessVersion,
    pdp.processName primaryProcessName,
    pdp.desProcessInstance primaryDesInstance,

    pdpar.processInstanceId as parentInstanceId,
    pdpar.processId parentProcessId,
    pdpar.processVersion parentProcessVersion,
    pdpar.processName parentProcessName,
    pdpar.desProcessInstance parentDesInstance,

    pd.businessState,
    pd.businessKey,
    pis2.actorId createdBy,
    p.start_date,
    p.end_date,
    p.status,
    p.outcome,
    if(pref.processInstanceId is null,false,true) preferred,

    cast( IF( length(pconf.statusFtl) > 0, pconf.statusFtl,dp.resourceValue) as char) as ftl

    from
    ProcessInstanceLog p
    left join PreferredInstance pref on pref.processInstanceId = p.processInstanceId and pref.userId = :actorId
    left join ProcessInstanceSecurity pis2 on pis2.instanceId = p.processInstanceId and pis2.taskId=0
    left join ProcessDetails pd on pd.processInstanceId = p.processInstanceId
    left join ProcessDetails pdp on pdp.processInstanceId = pd.primaryProcessInstanceId
    left join ProcessDetails pdpar on pdpar.processInstanceId = p.parentProcessInstanceId
    left join DeployedProcess dp on dp.processId=p.processId and resourceName = 'startup.ftl'
    join ProcessConfiguration pconf on pconf.aoo = pd.instanceAoo and pconf.processId = pd.processId

    where
    p.processInstanceId in 
    (
    select pd1.ProcessInstanceId
    from ProcessDetails pd1 
    where primaryProcessInstanceId = (select primaryProcessInstanceId from ProcessDetails pd0 where pd0.ProcessInstanceId = :id )

    )


buffer.$security=\
    
    select GROUP_CONCAT( DISTINCT actorId) actors

    from ProcessDetails pd
    join ProcessInstanceSecurity pis on pd.primaryProcessInstanceId = pis.primaryInstanceId
    where
    pd.processInstanceId = :id
    and pis.taskId <> 0 


